@model MusicStore.MVC.Models.Client

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<!-- some CSS styling changes and overrides -->
<style>
    .kv-avatar .file-preview-frame, .kv-avatar .file-preview-frame:hover {
        margin: 0;
        padding: 0;
        border: none;
        box-shadow: none;
        text-align: center;
    }

    .kv-avatar .file-input {
        display: table-cell;
        max-width: 220px;
    }
</style>

<!-- breadcrumb -->
<div id="breadcrumb">
    <ul class="breadcrumb">
        <li><i class="fa fa-home"></i><a href="@Url.Action("Index", "Admin")"> Inicio</a></li>
        <li>Registro SongSet</li>
        <li class="active">Crear Cliente</li>
    </ul>
</div>

<!-- Titulo de página -->
<div class="main-header clearfix">
    <div class="page-title">
        <h3 class="no-margin"><i class="fa fa-user fa-sm"></i>&nbsp;Crear Cliente de Ingreso</h3>
    </div>
</div>

<div class="padding-md">
    <div class="row">

        <!-- Contenido -->
        <div class="col-md-10 col-md-offset-1">
            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <span class="pull-left">
                        <i class="fa fa-edit"></i>&nbsp;Crear Cliente
                    </span>
                    <ul class="tool-bar">
                        <li><a href="#" class="refresh-widget" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Actualizar"><i class="fa fa-refresh"></i></a></li>
                        <li><a href="#aportes" data-toggle="collapse"><i class="fa fa-arrows-v"></i></a></li>
                    </ul>
                </div>
                <div class="panel-body collapse in">
                    <!-- body -->
                    <div class="col-md-12">

                        <form class="form-horizontal no-margin" id="formValidate" data-validate="parsley">
                            <div class="form-group">
                                <div class="kv-avatar center-block" style="width: 200px">
                                    <input id="avatar" name="avatar" type="file" data-required="true" class="file-loading">
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-4 control-label">Id</label>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @id = "txtId", @data_required = "true", @pattern = "^[a-zA-Z0-9\\s-, ]+$" } })
                                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-4 control-label">Name</label>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "txtName", @data_required = "true", @pattern = "^[a-zA-Z0-9\\s-, ]+$" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-4 control-label">Mail</label>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", @id = "txtMail", @data_required = "true", @pattern = "[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$" } })
                                    @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-4 control-label">Phone</label>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @id = "txtPhone", @data_required = "true", @pattern = "[2-9]{1}[0-9]{9}" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-4 control-label">Direction</label>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Direction, new { htmlAttributes = new { @class = "form-control", @id = "txtDirection", @data_required = "true", @pattern = "^[a-zA-Z0-9\\s-, ]+$" } })
                                    @Html.ValidationMessageFor(model => model.Direction, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </form>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div style="text-align:center">
                                <a id="btnsave" class="btn btn-primary animated-bar">
                                    <i class="fa fa-save"></i>&nbsp; Guardar
                                </a>
                                <a class="btn btn-default" href="@Url.Action("Index", "Client", new {active = false})">
                                    <i class="fa fa-reply"></i>&nbsp; Volver al Listado
                                </a>
                            </div>

                        }

                        <!-- /body -->
                    </div>
                    <div class="loading-overlay">
                        <i class="loading-icon fa fa-refresh fa-spin fa-lg"></i>
                    </div>
                </div>
            </div>
        </div>
        <!-- Contenido -->
    </div>
</div>

<link href="~/Content/css/all-krajee.css" rel="stylesheet" />
<link href="~/Content/css/fileinput.min.css" rel="stylesheet" />
<script src="~/Content/all-krajee.js"></script>
<script src="~/Content/fileinput.min.js"></script>

<!-- the fileinput plugin iIdialization -->
<script type="text/javascript">
    var foto = "default_avatar_male.jpg";
    var rutaImg = '@Url.Content("~/Content/Uploads/")';
    $("#avatar").fileinput({
        overwriteIIdial: true,
        maxFileSize: 1500,
        showClose: false,
        showCaption: false,
        browseLabel: '',
        removeLabel: '',
        browseIcon: '<i class="glyphicon glyphicon-folder-open"></i>',
        removeIcon: '<i class="glyphicon glyphicon-remove"></i>',
        removeTitle: 'Cancel or reset changes',
        elErrorContainer: '#kv-avatar-errors',
        msgErrorClass: 'alert alert-block alert-danger',
        defaultPreviewContent: '<img src="' + rutaImg + foto + '" alt="No Imagen" style="width:160px">',
        layoutTemplates: { main2: '{preview} {remove} {browse}' },
        allowedFileExtensions: ["jpg", "png", "gif"]
    });

    function SaveFile() {
        var Id = $("#txtId").val();
        var formData = new FormData();
        var file = document.getElementById("avatar").files[0];
        formData.append("avatar", file);

        $.ajax({
            type: "POST",
            url: '@Url.Action("Upload", "Client")' + "/?Id=" + Id,
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {
                toastr.options = {
                    "closeButton": true,
                    "debug": false,
                    "progressBar": true,
                    "positionClass": "toast-top-full-width",
                    "onclick": null,
                    "showDuration": "500",
                    "hideDuration": "1000",
                    "timeOut": "3000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                toastr.options.onHidden = function () {
                    $(location).attr('href', "@Url.Action("Index", "Client", new { active = true })");
                };
                toastr.success('Cliente registrado con exito.', 'Registro Cliente');
            },
            error: function (error) {
                alert(error.responseText);
            }
        });
    }


    $("#btnsave").click(function () {

        var Id = $("#txtId").val();
        var Name = $("#txtName").val();
        var Mail = $("#txtMail").val();
        var Direction = $("#txtDirection").val();
        var Phone = $("#txtPhone").val();
        var file = document.getElementById("avatar").files[0];
        var token = $('[name=__RequestVerificationToken]').val();

        var Valido = $('#formValidate').parsley('validate');
        if (Valido) {
            $.ajax({
                dataType: 'json',
                async: false,
                headers: { "__RequestVerificationToken": token },
                type: "POST",
                url: '@Url.Action("RegistrarClient", "Client")',
                data: JSON.stringify({ Id: Id, Name: Name, Mail: Mail, Direction: Direction, Phone: Phone, Photo: file }),
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    switch (result) {
                        case "save":
                            SaveFile();
                            break;
                        case "exist":
                            toastr.options = {
                                "closeButton": true,
                                "debug": false,
                                "progressBar": true,
                                "positionClass": "toast-top-full-width",
                                "onclick": null,
                                "showDuration": "700",
                                "hideDuration": "1000",
                                "timeOut": "7000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                            toastr.options.onHidden = function () {
                                $(location).attr('href', "@Url.Action("Index", "Client", new { active = true })");
                            };
                            toastr.error("El Id ingresado ya se encuentra registrado.", 'Registro Cliente');

                            break;
                        case "noactive":
                            toastr.options = {
                                "closeButton": true,
                                "debug": false,
                                "progressBar": true,
                                "positionClass": "toast-top-full-width",
                                "onclick": null,
                                "showDuration": "700",
                                "hideDuration": "1000",
                                "timeOut": "7000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                            toastr.options.onHidden = function () {
                                $(location).attr('href', "@Url.Action("Index", "Client", new { active = true })");
                            };
                            toastr.error("No existe una votación en curso para realizar un registro.", 'Registro Cliente');

                            break;
                    }

                }
            });
        }
    });
</script>
